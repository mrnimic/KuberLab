- name: Set Master hostname.
  become: yes
  become_user: root
  hostname:
    name: control-plane

- name: Add Google official GPG key
  become: yes
  become_user: root
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present

- name: Add Kubernetes Repository
  become: yes
  become_user: root
  apt_repository:
    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main 
    state: present
    filename: kubernetes
    mode: 0600
    
- name: Install prerequisite packages.
  become: yes
  become_user: root
  ansible.builtin.apt:
    name:
      - python3
      - unzip
      - kubectl
    state: present
    update_cache: yes

######## AWSCLI

- name: Download the awscli bundle.
  get_url: url=https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip dest=/tmp/awscliv2.zip
  register: aws_cli_download_bundle

- name: Unarchive the installer.
  unarchive: src=/tmp/awscliv2.zip dest=/tmp copy=no creates=/tmp/awscli
  when: aws_cli_download_bundle.changed
  register: aws_cli_unarchive_installer

- name: Install awscli package.
  become: yes
  become_user: root
  shell: /tmp/aws/install -i /usr/local/aws -b /usr/bin/
  when: aws_cli_unarchive_installer.changed

- name: Create .aws Directory
  file:
    path: /home/ubuntu/.aws
    state: directory

- name: Configure AWS.
  shell: echo "{{ hostvars['AWS_TOKEN_HOLDER']['token'] }}" > /home/ubuntu/.aws/credentials

- name: aws-cli autocomplete
  ansible.builtin.lineinfile:
    path: /home/ubuntu/.bashrc
    line: complete -C '/usr/local/bin/aws_completer' aws


######## Update kubeconfig
- name: Update kubeconfig
  shell: aws eks update-kubeconfig --region us-east-1 --name {{ cluster_name }}


- name: add alias k for kubectl
  ansible.builtin.lineinfile:
    path: /home/ubuntu/.bashrc
    line: alias k='kubectl'


######### Impersonation
- name: copy my private ssh key
  ansible.builtin.copy:
    src: /Users/nima/.ssh/id_rsa
    dest: /home/ubuntu/.ssh/id_rsa
    owner: ubuntu
    group: ubuntu
    mode: '0600'

- name: copy my public ssh key
  ansible.builtin.copy:
    src: /Users/nima/.ssh/id_rsa.pub
    dest: /home/ubuntu/.ssh/id_rsa.pub
    owner: ubuntu
    group: ubuntu
    mode: '0644'

######### Clone Projects
- name: clone backend
  ansible.builtin.git:
    repo: 'git@github.com:mrnimic/trb-ruby.git'
    dest: /home/ubuntu/repositories/trb-ruby
    version: release/s2.0.24
    accept_hostkey: true

- name: clone unifier
  ansible.builtin.git:
    repo: 'git@github.com:mrnimic/unifier-ruby.git'
    dest: /home/ubuntu/repositories/unifier-ruby
    version: release/s1.0.58
    accept_hostkey: true

- name: clone triage
  ansible.builtin.git:
    repo: 'git@github.com:mrnimic/trb-triage-react.git'
    dest: /home/ubuntu/repositories/trb-triage-react
    version: release/s3.0.18
    accept_hostkey: true

- name: clone hr
  ansible.builtin.git:
    repo: 'git@github.com:mrnimic/trb-hr-admin-react.git'
    dest: /home/ubuntu/repositories/trb-hr-admin-react
    version: release/s1.0.44
    accept_hostkey: true

- name: clone questionnaire
  ansible.builtin.git:
    repo: 'git@github.com:mrnimic/trb-questionnaire-react.git'
    dest: /home/ubuntu/repositories/trb-questionnaire-react
    version: release/s1.0.24
    accept_hostkey: true

- name: clone webapp
  ansible.builtin.git:
    repo: 'git@github.com:mrnimic/trb-webapp-react.git'
    dest: /home/ubuntu/repositories/trb-webapp-react
    version: release/s1.0.136
    accept_hostkey: true

- name: clone enterprise
  ansible.builtin.git:
    repo: 'git@github.com:mrnimic/trb-webapp-enterprise-react.git'
    dest: /home/ubuntu/repositories/trb-webapp-enterprise-react
    version: release/s1.0.61
    accept_hostkey: true